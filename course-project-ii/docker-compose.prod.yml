version: "3.4"

volumes:
  astro_node_modules:

services:
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - qa-api
      - qa-ui
      - sse
    ports:
      - 7800:7800

  qa-api:
    build: 
      context: qa-api
      dockerfile: Dockerfile.prod
    image: qa-api-prod
    restart: "on-failure"
    volumes:
      - ./qa-api/:/app
      - ./app-cache/:/app-cache
    expose:
      - 7777
    depends_on:
      - database
      - flyway
      - mq
      - sse
      - redis
    env_file:
      - project.env
    deploy:
      restart_policy:
        condition: on-failure
        delay: "5s"
        max_attempts: 5
        window: "30s"

  qa-ui:
    build: 
      context: qa-ui
      dockerfile: Dockerfile.prod
    image: qa-ui-prod
    restart: "on-failure"
    ports:
      - 3000:80
    depends_on:
      - qa-api
    deploy:
      restart_policy:
        condition: on-failure
        delay: "5s"
        max_attempts: 5
        window: "30s"

  llm-api:
    build: llm-api
    image: llm-api
    restart: "no"
    expose:
      - 7000

  database:
    container_name: database-server-dab-p2-d8b2db3c-d96a-48e0-8175-4edd6d9b5209
    image: postgres:14.1
    restart: unless-stopped
    volumes:
      - ./production-database-data:/var/lib/postgresql/data
    env_file:
      - project.env
  
  sse:
    build: 
      context: sse
      dockerfile: Dockerfile.prod
    image: sse-prod
    restart: "on-failure"
    volumes:
      - ./sse/:/app
    ports:
      - 7776:7776
    depends_on:
      - database
      - flyway
      - mq
    env_file:
      - project.env
    deploy:
      restart_policy:
        condition: on-failure
        delay: "5s"
        max_attempts: 5
        window: "30s"

  flyway:
    image: flyway/flyway:9.11.0-alpine
    depends_on:
      - database
    volumes:
      - ./flyway/sql/:/flyway/sql
    command: -connectRetries=60 -baselineOnMigrate=true migrate
    env_file:
      - project.env
  
  redis:
    image: redis:latest
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    expose:
      - 6379
  
  mq:
    image: rabbitmq:3-management
    restart: "no"
    ports:
      - 5672:5672
      - 15672:15672
    env_file:
      - project.env
